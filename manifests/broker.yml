---
# ===========================================================
# This file configures the RabbitMQ Multitenant Broker node.
# ===========================================================
meta:
  environment: (( grab genesis.env || params.env ))
  bosh_exodus_path: (( grab params.bosh_exodus_path || genesis.bosh || params.bosh || genesis.env || params.env ))

  cf:
    exodus_path: (( concat "secret/exodus/" meta.bosh_exodus_path "/cf" ))
    deployment_name: (( concat meta.environment "-cf" ))
    system_domain: (( vault meta.cf.exodus_path ":system_domain" ))
    api_url:    (( concat "https://api." meta.cf.system_domain ))
    username:   (( vault meta.cf.exodus_path ":admin_username" ))
    password:   (( vault meta.cf.exodus_path ":admin_password" ))
  broker:
    username: (( grab params.broker_username ))
    password: (( vault meta.vault "/broker/auth:password" ))
    protocol: http
    port:     4567

params:
  broker_name:  p-rabbitmq
  service_name: p-rabbitmq
  broker_domain: (( param "Please specify a broker domain" ))
  # the username used by the Cloud Controller to auth to the broker
  broker_username: broker
  ha_sync_mode: manual

instance_groups:
- name:      rmq-broker
  instances: 1
  azs:       (( grab params.availability_zones || meta.default.azs ))
  stemcell:  default
  networks:
  - name: (( grab params.broker_network || "rabbitmq" ))
    static_ips: (( static_ips 1 ))
  vm_type:   (( grab params.broker_vm_type || "small" ))
  jobs:
  - name: rabbitmq-service-broker
    release: cf-rabbitmq-multitenant-broker
    properties:
      #cf:
      #  domain: (( grab meta.cf.system_domain ))
      rabbitmq-service-broker:
        #route:
        #cc_endpoint: (( grab meta.cf.api_url ))
        service:
          username:  (( grab meta.broker.username ))
          password:  (( grab meta.broker.password ))
          #FIXME: Generate these
          uuid:      54766614-4530-41e6-b5df-8ccb2dc3fd3f
          plan_uuid: f2b16201-b927-4a54-b744-2071ba299f0b
          name:      (( grab params.service_name ))
          shareable: true
        logging:
          level: debug
          print_stack_traces: false
        rabbitmq:
          #hosts: actually uses bosh links
          ssl: true
          operator_set_policy:
            enabled: true
            policy_name: "operator_set_policy"
            policy_definition: >-
              (( concat "{\"ha-mode\":\"exactly\",\"ha-params\": 2,\"ha-sync-mode\":\"" params.ha_sync_mode "\"}" ))
            policy_priority: 50
          management_domain: (( concat params.mgmt_domain ":" meta.mgmt_port ))
          management_tls:
            enabled: true
            cacert: (( grab meta.mgmt_tls.cacert ))

          management:
            username: management
          administrator:
            username: broker
            password: (( vault meta.vault "/rabbitmq/admin/broker:password" ))

  - name:    bpm
    release: bpm

  - name: cf-cli-6-linux
    release: cf-cli

  - name: broker-registrar
    release: cf-rabbitmq-multitenant-broker
    properties:
      .: (( inject instance_groups.rmq-broker.jobs.broker-deregistrar.properties ))
      broker:
        protocol: (( grab meta.broker.protocol ))
        host:     (( concat params.broker_domain ":" meta.broker.port ))
        username: (( grab meta.broker.username ))
        password: (( grab meta.broker.password ))

  - name: broker-deregistrar
    release: cf-rabbitmq-multitenant-broker
    properties:
      cf:
        api_url: (( grab meta.cf.api_url ))
        admin_username: (( grab meta.cf.username ))
        admin_password: (( grab meta.cf.password ))
      broker:
        service:
          name: (( grab params.service_name ))
        name: (( grab params.broker_name ))

  - name: smoke-tests
    release: cf-rabbitmq-smoke-tests
    properties:
      .: (( inject instance_groups.rmq-broker.jobs.broker-deregistrar.properties ))
      cf:
        domain:  (( grab meta.cf.system_domain ))
      smoke_tests:
        org: system

releases:
  - name: cf-rabbitmq-multitenant-broker
    .:    (( inject meta.releases.cf-rabbitmq-multitenant-broker ))
  - name: cf-rabbitmq-smoke-tests
    .:    (( inject meta.releases.cf-rabbitmq-smoke-tests ))
  - name: cf-cli
    .:    (( inject meta.releases.cf-cli ))
  - name: haproxy
    .:    (( inject meta.releases.haproxy ))

exodus:
  broker_url: (( concat meta.broker.protocol "://" params.broker_domain ":" meta.broker.port ))
  broker_username: (( grab meta.broker.username ))
  broker_password: (( grab meta.broker.password ))
  broker_name: (( grab params.broker_name ))
  service_name: (( grab params.service_name ))
